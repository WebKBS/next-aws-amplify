// https://nextjs.org/docs/app/api-reference/file-conventions/metadata/opengraph-image#generate-images-using-code-js-ts-tsx
// og:image를 생성하는 API 라우트 공식 문서 참고

import { defaultData } from '@/config/defaultData';
import { ImageResponse } from 'next/og';
import { NextRequest } from 'next/server';

export const runtime = 'edge';

const interBold = fetch(
  new URL('../../../assets/fonts/Inter-Bold.ttf', import.meta.url)
).then((res) => res.arrayBuffer());

export async function GET(req: NextRequest) {
  try {
    const fontBold = await interBold;

    const { searchParams } = req.nextUrl;
    const title = searchParams.get('title');
    let description = searchParams.get('description');

    if (!title) {
      return new Response('title', {
        status: 400,
      });
    }

    if (!description) {
      description = '';
    }

    const heading = title.length > 40 ? `${title.substring(0, 140)}...` : title;
    const desc =
      description.length > 120
        ? `${description.substring(0, 120)}...`
        : description;

    return new ImageResponse(
      (
        <div tw="flex relative flex-col p-12 w-full h-full items-start text-black bg-white">
          <div tw="flex items-center">
            <svg
              width="40"
              height="40"
              viewBox="0 0 40 40"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <g clip-path="url(#clip0_24_70)">
                <path
                  d="M0 4C0 1.79086 1.79086 0 4 0H36C38.2091 0 40 1.79086 40 4V36C40 38.2091 38.2091 40 36 40H4C1.79086 40 0 38.2091 0 36V4Z"
                  fill="#7F00FF"
                />
                <circle cx="20" cy="20" r="18" fill="white" />
                <path
                  d="M33.9999 19.8834V22.4046C32.9235 22.4046 32.1737 22.6601 31.7505 23.171C31.3274 23.6745 31.1159 24.4853 31.1159 25.6033V27.6914C31.1159 29.1797 30.9292 30.3496 30.5558 31.2011C30.1887 32.0526 29.6816 32.6783 29.0345 33.0781C28.3936 33.478 27.65 33.7297 26.8037 33.8334C25.9637 33.9445 25.0646 34 24.1063 34V30.0127C24.853 30.0127 25.4099 29.9053 25.777 29.6906C26.1504 29.4759 26.3993 29.1501 26.5237 28.7132C26.6482 28.2763 26.7104 27.7247 26.7104 27.0583V24.215C26.7104 23.6523 26.8068 23.1117 26.9997 22.5934C27.1926 22.0751 27.5473 21.616 28.0638 21.2162C28.5802 20.8089 29.3145 20.4868 30.2665 20.2499C31.2248 20.0056 32.4692 19.8834 33.9999 19.8834ZM24.1063 6C25.0646 6 25.9637 6.05553 26.8037 6.1666C27.65 6.27026 28.3936 6.52202 29.0345 6.92186C29.6816 7.3217 30.1887 7.94738 30.5558 8.79889C30.9292 9.6504 31.1159 10.8203 31.1159 12.3086V14.4078C31.1159 15.5184 31.3274 16.3292 31.7505 16.8401C32.1737 17.3511 32.9235 17.6065 33.9999 17.6065V20.1166C32.4692 20.1166 31.2248 19.9981 30.2665 19.7612C29.3145 19.5243 28.5802 19.2022 28.0638 18.7949C27.5473 18.3877 27.1926 17.9249 26.9997 17.4066C26.8068 16.8883 26.7104 16.3477 26.7104 15.785V12.9417C26.7104 12.2753 26.6482 11.7237 26.5237 11.2868C26.3993 10.8499 26.1504 10.5241 25.777 10.3094C25.4099 10.0947 24.853 9.98731 24.1063 9.98731V6ZM33.9999 17.6065V22.4046H30.2758V17.6065H33.9999Z"
                  fill="#7F00FF"
                />
                <path
                  d="M6 20.1166V17.6065C7.0827 17.6065 7.8325 17.3511 8.2494 16.8401C8.67252 16.3292 8.88408 15.5184 8.88408 14.4078V12.3086C8.88408 10.8203 9.06765 9.6504 9.43477 8.79889C9.80811 7.94738 10.3152 7.3217 10.9561 6.92186C11.6033 6.52202 12.35 6.27026 13.1962 6.1666C14.0425 6.05553 14.9416 6 15.8936 6V9.98731C15.1469 9.98731 14.5869 10.0947 14.2136 10.3094C13.8465 10.5241 13.6007 10.8499 13.4762 11.2868C13.3518 11.7237 13.2895 12.2753 13.2895 12.9417V15.785C13.2895 16.3477 13.1931 16.8883 13.0002 17.4066C12.8073 17.9249 12.4526 18.3877 11.9362 18.7949C11.4197 19.2022 10.6824 19.5243 9.72411 19.7612C8.77208 19.9981 7.53071 20.1166 6 20.1166ZM15.8936 34C14.9416 34 14.0425 33.9445 13.1962 33.8334C12.35 33.7297 11.6033 33.478 10.9561 33.0781C10.3152 32.6783 9.80811 32.0526 9.43477 31.2011C9.06765 30.3496 8.88408 29.1797 8.88408 27.6914V25.6033C8.88408 24.4853 8.67252 23.6745 8.2494 23.171C7.8325 22.6601 7.0827 22.4046 6 22.4046V19.8834C7.53071 19.8834 8.77208 20.0056 9.72411 20.2499C10.6824 20.4868 11.4197 20.8089 11.9362 21.2162C12.4526 21.616 12.8073 22.0751 13.0002 22.5934C13.1931 23.1117 13.2895 23.6523 13.2895 24.215V27.0583C13.2895 27.7247 13.3518 28.2763 13.4762 28.7132C13.6007 29.1501 13.8465 29.4759 14.2136 29.6906C14.5869 29.9053 15.1469 30.0127 15.8936 30.0127V34ZM6 22.4046V17.6065H9.72411V22.4046H6Z"
                  fill="#7F00FF"
                />
                <circle cx="20" cy="20" r="4" fill="#7F00FF" />
              </g>
              <defs>
                <clipPath id="clip0_24_70">
                  <rect width="40" height="40" fill="white" />
                </clipPath>
              </defs>
            </svg>

            <p tw="ml-2 font-bold text-3xl">RecodeLog</p>
          </div>
          <div tw="flex flex-col flex-1 py-8">
            <p tw="flex text-2xl uppercase font-bold tracking-tight font-normal">
              BLOG POST
            </p>
            <h1 tw="flex text-[80px] font-bold text-[50px] mb-6">{heading}</h1>
            <h2 tw="text-3xl">{desc}</h2>
          </div>
          <div tw="flex items-center w-full justify-between">
            <h3 tw="flex text-2xl">{defaultData.url}</h3>
            <div tw="flex items-center text-2xl">
              <svg width="40" height="40" xmlns="http://www.w3.org/2000/svg">
                <path
                  fill-rule="evenodd"
                  clip-rule="evenodd"
                  d="M48.854 0C21.839 0 0 22 0 49.217c0 21.756 13.993 40.172 33.405 46.69 2.427.49 3.316-1.059 3.316-2.362 0-1.141-.08-5.052-.08-9.127-13.59 2.934-16.42-5.867-16.42-5.867-2.184-5.704-5.42-7.17-5.42-7.17-4.448-3.015.324-3.015.324-3.015 4.934.326 7.523 5.052 7.523 5.052 4.367 7.496 11.404 5.378 14.235 4.074.404-3.178 1.699-5.378 3.074-6.6-10.839-1.141-22.243-5.378-22.243-24.283 0-5.378 1.94-9.778 5.014-13.2-.485-1.222-2.184-6.275.486-13.038 0 0 4.125-1.304 13.426 5.052a46.97 46.97 0 0 1 12.214-1.63c4.125 0 8.33.571 12.213 1.63 9.302-6.356 13.427-5.052 13.427-5.052 2.67 6.763.97 11.816.485 13.038 3.155 3.422 5.015 7.822 5.015 13.2 0 18.905-11.404 23.06-22.324 24.283 1.78 1.548 3.316 4.481 3.316 9.126 0 6.6-.08 11.897-.08 13.526 0 1.304.89 2.853 3.316 2.364 19.412-6.52 33.405-24.935 33.405-46.691C97.707 22 75.788 0 48.854 0z"
                  fill="#24292f"
                />
              </svg>
              <h3 tw="flex ml-2">{defaultData.links.github}</h3>
            </div>
          </div>
        </div>
      ),
      {
        width: 1200,
        height: 630,
        fonts: [
          {
            name: 'Inter',
            data: fontBold,
            style: 'normal',
            weight: 700,
          },
        ],
      }
    );
  } catch (error) {
    return new Response('이미지 만들기 실패', { status: 500 });
  }
}
